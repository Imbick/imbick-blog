
[{"content":"","date":"30 July 2025","externalUrl":null,"permalink":"/","section":"Imbick's Edge","summary":"","title":"Imbick's Edge","type":"page"},{"content":"Far less progress made this evening.\nA major refactor on the way input contexts work. So now all of the physics code for deciding what happens when a player jumps or collides etc is controlled by the input context which is a more sensible place for it to live.\nIn doing so I started to notice how poor the physics code was implemented, so I restructured a lot of that. Which enabled me to model the jump physics more accurately - so no more jetpacks :'(\nTomorrow I hope to work more on the jump handling and general movement of the player so things feel more natural.\nThen I\u0026rsquo;ll probably turn my attention to interaction with the world, which should make this thing start to become more like a real boy game.\n","date":"30 July 2025","externalUrl":null,"permalink":"/posts/jumping/","section":"Posts","summary":"","title":"Jumps","type":"posts"},{"content":"","date":"30 July 2025","externalUrl":null,"permalink":"/posts/","section":"Posts","summary":"","title":"Posts","type":"posts"},{"content":"Mainly fixing bugs this morning and getting things into a better state.\nThere was a bug where the player would appear to accelerate towards the left or right when \u0026lsquo;jumping\u0026rsquo;. (Jumping currently behaves like some kind of crazy jetpack üë®‚ÄçüöÄ - it very much shouldn\u0026rsquo;t)\nThis was due to me clamping each axis separately to within the max speed limits.\nx = float.Clamp(x, -MaxHorizontalSpeed, MaxHorizontalSpeed); z = float.Clamp(z, -MaxHorizontalSpeed, MaxHorizontalSpeed); This had the effect of keeping one axis below the speed limit, but allowing the other to continue to accelerate. Now I validate against the length of the vector rather than the individual axes.\nAs you can see from the screenshot I\u0026rsquo;m also now playing around with some different block arrangements to try and find any weird edge cases with the collision detection.\nI think I need to add a small offset when resolving intersections to avoid collisions with block seams but need to find a reproducible test case first.\n","date":"30 July 2025","externalUrl":null,"permalink":"/posts/playing/","section":"Posts","summary":"","title":"Playing and fixing","type":"posts"},{"content":"Not quite a game, but a here\u0026rsquo;s a game-like-thing I made nonetheless.\n\u0026nbsp;Download v0.1.0-alpha C#, .NET 8, fully custom engine.\nVery small number of only essential libraries used.\n","date":"28 July 2025","externalUrl":null,"permalink":"/posts/rise/","section":"Posts","summary":"","title":"We make games","type":"posts"},{"content":"","externalUrl":null,"permalink":"/authors/","section":"Authors","summary":"","title":"Authors","type":"authors"},{"content":"","externalUrl":null,"permalink":"/categories/","section":"Categories","summary":"","title":"Categories","type":"categories"},{"content":"","externalUrl":null,"permalink":"/series/","section":"Series","summary":"","title":"Series","type":"series"},{"content":"","externalUrl":null,"permalink":"/tags/","section":"Tags","summary":"","title":"Tags","type":"tags"}]